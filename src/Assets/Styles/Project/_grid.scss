@use 'variables' as *;
@use 'mixins'as *;

/*  Global
    ========================================================================== */

/**
 * Global container
 *
 * Use to the body or the page container
 *
 * @param   $theme   the type of theme, default value 'main'
 */
@mixin global-container($theme: main) {
    @include grid-align($align-content: start, $justify-content: start, $gap: 0);
    min-height: $global-container-min-height;

    @if $theme == admin {
        grid-template-columns: auto $global-container-width;
        grid-template-areas:
                "menu main"
                "menu footer";
    } @else {
        grid-template-columns: $global-container-width;
        grid-template-areas:
                "main"
                "footer";
    }
}

/*  Column layout
    ========================================================================== */

/**
 * Abstract of a column layout container
 *
 * @param   $align-items        the align of items
 * @param   $justify-items      the justify of items
 */
@mixin _col-layout-container($align-items, $justify-items) {
    @include grid-align($align-content: stretch, $justify-content: stretch, $align-items: $align-items, $justify-items: $justify-items, $gap: $global-spacing);

    grid-template-columns:
            [container-start pad-left-start] $pad-width
            [pad-left-end content-start]repeat($col-layout-container-columns, [col-start] $col-layout-container-columns-width [col-end]) [content-end pad-right-start]
            $pad-width [pad-right-end container-end];

    @media (min-width: map-get($breakpoints, md)) {
        grid-gap: $global-gap;
        grid-template-columns:
                [container-start pad-left-start] $pad-width
                [pad-left-end content-start]repeat($col-layout-container-columns-md, [col-start] $col-layout-container-columns-width [col-end]) [content-end pad-right-start]
                $pad-width [pad-right-end container-end];
    }

    @media (min-width: map-get($breakpoints, lg)) {
        grid-template-columns:
                [container-start pad-left-start] $pad-width
                [pad-left-end content-start] repeat($col-layout-container-columns-lg, [col-start] $col-layout-container-columns-width-lg [col-end]) [content-end pad-right-start]
                $pad-width [pad-right-end container-end];
    }
}

/**
 * Column layout container
 *
 * Use to the layout container (header, navbar, main, etc.)
 *
 * @param   $area               the area in global container (in layout)
 * @param   $align-items        the align of items, default value 'stretch'
 * @param   $justify-items      the justify of items, default value 'stretch'
 */
@mixin col-layout-container($area, $align-items: stretch, $justify-items: stretch) {
    @include _col-layout-container($align-items: $align-items, $justify-items: $justify-items);
    grid-area: $area;
}

/**
 * Full bleed wrapper
 *
 * Use as a wrapper to create the full-bleed element
 *
 * @param   $align-items        the align of items, default value 'stretch'
 * @param   $justify-items      the justify of items, default value 'stretch'
 */
@mixin full-bleed-wrapper($area, $align-items: stretch, $justify-items: stretch) {
    @include _col-layout-container($align-items: $align-items, $justify-items: $justify-items);
    grid-column: container-start / container-end;
}
